
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  companyId: 'companyId',
  emailVerifiedAt: 'emailVerifiedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  ownerUserId: 'ownerUserId',
  latitude: 'latitude',
  longitude: 'longitude',
  radius: 'radius',
  logo: 'logo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UserTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  expiredAt: 'expiredAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId',
  employeeCode: 'employeeCode',
  fullName: 'fullName',
  dateOfBirth: 'dateOfBirth',
  nik: 'nik',
  gender: 'gender',
  mobileNumber: 'mobileNumber',
  address: 'address',
  position: 'position',
  department: 'department',
  photo: 'photo',
  hireDate: 'hireDate',
  status: 'status',
  promotionHistory: 'promotionHistory',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  SUPERADMIN: 'SUPERADMIN',
  ADMIN: 'ADMIN',
  EMPLOYEE: 'EMPLOYEE'
};

exports.EmployeeStatus = exports.$Enums.EmployeeStatus = {
  ACTIVE: 'ACTIVE',
  RESIGNED: 'RESIGNED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  UserToken: 'UserToken',
  Employee: 'Employee'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Magang\\HRIS_App\\backend\\src\\generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Magang\\HRIS_App\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              Int       @id @default(autoincrement())\n  name            String?\n  email           String    @unique\n  password        String\n  role            Role      @default(ADMIN)\n  companyId       Int?\n  emailVerifiedAt DateTime? @map(\"email_verified_at\")\n  createdAt       DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt       DateTime  @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n  deletedAt       DateTime? @map(\"deleted_at\") @db.Timestamptz(6)\n\n  company        Company?    @relation(fields: [companyId], references: [id])\n  ownedCompanies Company[]   @relation(\"CompanyOwner\") // admin sebagai pemilik company\n  tokens         UserToken[] // relasi ke tabel UserToken\n  Employee       Employee[]\n\n  @@map(\"users\")\n}\n\nmodel Company {\n  id          Int       @id @default(autoincrement())\n  companyName String    @map(\"company_name\")\n  ownerUserId Int       @map(\"owner_user_id\")\n  latitude    Decimal?  @db.Decimal(10, 8) // contoh: -6.20000000\n  longitude   Decimal?  @db.Decimal(11, 8) // contoh: 106.81666667\n  radius      Int       @default(200)\n  logo        String?   @db.VarChar(255) // hanya simpan nama file\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt   DateTime  @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n  deletedAt   DateTime? @map(\"deleted_at\") @db.Timestamptz(6)\n\n  // Relasi ke User (owner)\n  owner    User       @relation(\"CompanyOwner\", fields: [ownerUserId], references: [id])\n  members  User[]\n  Employee Employee[]\n\n  @@map(\"companies\")\n}\n\nmodel UserToken {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  token     String   @unique\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  expiredAt DateTime @map(\"expired_at\") @db.Timestamptz(6)\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"user_tokens\")\n}\n\nenum Role {\n  SUPERADMIN\n  ADMIN\n  EMPLOYEE\n}\n\nenum EmployeeStatus {\n  ACTIVE\n  RESIGNED\n}\n\nmodel Employee {\n  id               Int            @id @default(autoincrement())\n  userId           Int            @map(\"user_id\")\n  companyId        Int            @map(\"company_id\")\n  employeeCode     String         @unique @map(\"employee_code\")\n  fullName         String         @map(\"full_name\")\n  dateOfBirth      DateTime?      @map(\"date_of_birth\") @db.Date\n  nik              String\n  gender           String\n  mobileNumber     String?        @map(\"mobile_number\")\n  address          String?\n  position         String\n  department       String\n  photo            String?        @db.VarChar(255) // hanya simpan nama file\n  hireDate         DateTime       @map(\"hire_date\") @db.Date\n  status           EmployeeStatus @default(ACTIVE)\n  promotionHistory String?        @map(\"promotion_history\")\n  createdAt        DateTime       @default(now()) @map(\"created_at\") @db.Timestamptz(6)\n  updatedAt        DateTime       @updatedAt @map(\"updated_at\") @db.Timestamptz(6)\n  deletedAt        DateTime?      @map(\"deleted_at\") @db.Timestamptz(6)\n\n  // Relasi\n  user    User    @relation(fields: [userId], references: [id])\n  company Company @relation(fields: [companyId], references: [id])\n\n  @@map(\"employees\")\n}\n",
  "inlineSchemaHash": "cba3928aef1e9ec448302912089cd55ae704926e636b663ee7a812c2a8f7b1c7",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"email_verified_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"ownedCompanies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyOwner\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"UserToken\",\"relationName\":\"UserToUserToken\"},{\"name\":\"Employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToUser\"}],\"dbName\":\"users\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_name\"},{\"name\":\"ownerUserId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"owner_user_id\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"radius\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyOwner\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"Employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyToEmployee\"}],\"dbName\":\"companies\"},\"UserToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expired_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserToken\"}],\"dbName\":\"user_tokens\"},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"company_id\"},{\"name\":\"employeeCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_code\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_name\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_of_birth\"},{\"name\":\"nik\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mobile_number\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"hire_date\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EmployeeStatus\"},{\"name\":\"promotionHistory\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"promotion_history\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmployeeToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEmployee\"}],\"dbName\":\"employees\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

